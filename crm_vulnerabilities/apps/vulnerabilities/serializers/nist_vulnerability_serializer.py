from rest_framework import serializers
from django.utils.html import escape


class NISTVulnerabilitySerializer(serializers.Serializer):
    """Serializer para vulnerabilidades obtenidas desde la API del NIST"""

    cve_id = serializers.CharField(max_length=100)
    description = serializers.CharField(max_length=500)
    severity = serializers.CharField()

    def to_representation(self, instance):
        """Convierte el formato de datos de la API externa a uno compatible con la API interna"""
        return {
            "cve_id": escape(instance["cve"]["CVE_data_meta"]["ID"]),
            "description": escape(
                instance["cve"]["description"]["description_data"][0]["value"].strip()
            ),
            "severity": escape(
                instance["impact"]["baseMetricV3"]["cvssV3"]["baseSeverity"]
            ),
        }

    def validate_severity(self, value):
        """Validación para asegurarse que la severidad tiene un valor correcto"""
        valid_severities = ["LOW", "MEDIUM", "HIGH", "CRITICAL"]
        if value.upper() not in valid_severities:
            raise serializers.ValidationError(
                "La severidad proporcionada no es válida."
            )
        return value.upper()

    def validate(self, data):
        """Validaciones a nivel de objeto para la coherencia de los datos"""
        if len(data["description"]) < 10:
            raise serializers.ValidationError("La descripción es demasiado corta.")
        return data
